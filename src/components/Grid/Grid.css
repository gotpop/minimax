/**
 * Defines the grid template columns for the grid layout.
 * 
 * The grid-template-columns property is used to specify the size and number of columns in a grid container.
 * In this example, the grid-template-columns property is set to a complex value that defines the width of each column.
 * 
 * The column widths are defined using the minmax() function, which specifies a minimum and maximum width for each column.
 * The first column has a minimum width of 1rem and a maximum width of 1fr (1 fraction of the available space).
 * The second column has a fixed width of 100px.
 * The third column is repeated 12 times, with each column having a minimum width of 1rem and a maximum width of 6rem.
 * After the 12 columns, there is a fixed width of 100px.
 * The last column has a minimum width of 1rem and a maximum width of 1fr.
 * 
 * The column widths are named using grid line names, such as [full-width-start], [breakout-start], [col-start], [col-end], [breakout-end], and [full-width-end].
 * These names can be used to reference specific grid lines in other CSS properties, such as grid-column-start and grid-column-end.
 */

@scope {
  :scope {
    display: grid;
    grid-template-columns:
      [full-width-start] minmax(1rem, 1fr)
      [breakout-start] 100px
      [col-start] repeat(12, minmax(1rem, 6rem)) [col-end]
      100px [breakout-end]
      minmax(1rem, 1fr) [full-width-end];
    scroll-behavior: smooth;

    /* header {
      grid-column: col;
    } */

    footer {
      grid-column: full-width;
    }
  }
}
